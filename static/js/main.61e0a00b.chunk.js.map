{"version":3,"sources":["style/GlobalStyle.tsx","components/Button.ts","constants/index.ts","components/CategoryImage.tsx","style/mixin.ts","components/Header.tsx","components/RestaurantDetail.tsx","components/RestaurantItem.tsx","components/RestaurantList.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","Button","styled","button","CATEGORIES","SORTING_TYPES","CATEGORY_IMAGE_MAP","한식","일식","중식","양식","아시안","기타","CategoryImage","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","CategoryImageWrapper","src","concat","props","category","alt","Component","div","textSubtitle","textBody","Header","HeaderWrapper","AddRestaurantButton","header","_templateObject2","RestaurantDetail","_this$props$restauran","restaurant","name","distance","description","link","Fragment","ModalBackdrop","onClick","closeModal","ModalContainer","Detail","RestaurantName","Distance","Description","Link","href","ButtonContainer","RemoveButton","CloseButton","_templateObject3","h2","_templateObject4","p","_templateObject5","_templateObject6","a","_templateObject7","_templateObject8","_templateObject9","_templateObject10","RestaurantItem","id","ItemWrapper","RestaurantInfo","li","span","RestaurantList","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","openDetailModal","e","target","closest","openModal","onChangeCategory","HTMLSelectElement","setCategory","onChangeSortingType","sortingType","setSortingType","FilterContainer","onChange","_toConsumableArray","map","RestaurantListContainer","restaurants","section","App","setState","detailId","isModalOpen","filterRestaurants","_this$state","state","filter","getPivot","sort","b","A","B","localStorage","getItem","setItem","JSON","stringify","mockData","parse","window","addEventListener","_ref","_this2","className","find","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+2LA+BeA,EA7BKC,YAAiBC,MAAAC,YAAA,ocCctBC,EAdAC,IAAOC,OAAMJ,MAAAC,YAAA,kMCAfI,EAAa,CAAC,eAAM,eAAM,eAAM,eAAM,qBAAO,gBAE7CC,EAAgB,CAAC,qBAAO,sBAExBC,EAA+C,CAC1DC,eAAI,sBACJC,eAAI,wBACJC,eAAI,uBACJC,eAAI,uBACJC,qBAAK,qBACLC,eAAI,oBCDAC,EAAa,SAAAC,GAAA,SAAAD,IAAA,OAAAE,YAAAC,KAAAH,GAAAI,YAAAD,KAAAE,YAAAL,GAAAM,MAAAH,KAAAI,YAOhB,OAPgBC,YAAAR,EAAAC,GAAAQ,YAAAT,EAAA,EAAAU,IAAA,SAAAC,MAAA,WAEf,OACEC,IAAAC,cAACC,EAAoB,KACnBF,IAAAC,cAAA,OAAKE,IAAG,SAAAC,OAAWvB,EAAmBU,KAAKc,MAAMC,WAAaC,IAAKhB,KAAKc,MAAMC,gBAGnFlB,EAPgB,CAASY,IAAMQ,WAU5BN,EAAuBzB,IAAOgC,IAAGnC,MAAAC,YAAA,sSAoBxBa,ICnCFsB,EAAe,oEAMfC,EAAW,oECMTC,EAbH,SAAAvB,GAAA,SAAAuB,IAAA,OAAAtB,YAAAC,KAAAqB,GAAApB,YAAAD,KAAAE,YAAAmB,GAAAlB,MAAAH,KAAAI,YAUT,OAVSC,YAAAgB,EAAAvB,GAAAQ,YAAAe,EAAA,EAAAd,IAAA,SAAAC,MAAA,WAER,OACEC,IAAAC,cAACY,EAAa,KACZb,IAAAC,cAAA,UAAI,oCACJD,IAAAC,cAACa,EAAmB,KAClBd,IAAAC,cAAA,OAAKE,IAAI,uBAAuBI,IAAI,gCAI3CK,EAVS,CAASZ,IAAMQ,WAerBK,EAAgBpC,IAAOsC,OAAMzC,MAAAC,YAAA,uNDpBV,qECoCnBuC,EAAsBrC,IAAOC,OAAMsC,MAAAzC,YAAA,+OCE1B0C,EAzBO,SAAA5B,GAAA,SAAA4B,IAAA,OAAA3B,YAAAC,KAAA0B,GAAAzB,YAAAD,KAAAE,YAAAwB,GAAAvB,MAAAH,KAAAI,YAsBnB,OAtBmBC,YAAAqB,EAAA5B,GAAAQ,YAAAoB,EAAA,EAAAnB,IAAA,SAAAC,MAAA,WACX,IAAAmB,EACiD3B,KAAKc,MAAMc,WAA3Db,EAAQY,EAARZ,SAAUc,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAAUC,EAAWJ,EAAXI,YAAaC,EAAIL,EAAJK,KAE/C,OACEvB,IAAAC,cAAAD,IAAAwB,SAAA,KACExB,IAAAC,cAACwB,EAAa,CAACC,QAASnC,KAAKc,MAAMsB,aACnC3B,IAAAC,cAAC2B,EAAc,KACb5B,IAAAC,cAAC4B,EAAM,KACL7B,IAAAC,cAACb,EAAa,CAACkB,SAAUA,IACzBN,IAAAC,cAAC6B,EAAc,KAAEV,GACjBpB,IAAAC,cAAC8B,EAAQ,KAAC,kCAAOV,EAAS,iBAC1BrB,IAAAC,cAAC+B,GAAW,KAAEV,GACdtB,IAAAC,cAACgC,GAAI,CAACC,KAAMX,GAAOA,GACnBvB,IAAAC,cAACkC,GAAe,KACdnC,IAAAC,cAACmC,GAAY,KAAC,4BACdpC,IAAAC,cAACoC,GAAW,CAACX,QAASnC,KAAKc,MAAMsB,YAAY,wBAMxDV,EAtBmB,CAASjB,IAAMQ,WA2B/BiB,EAAgBhD,IAAOgC,IAAGnC,MAAAC,YAAA,sHAU1BqD,EAAiBnD,IAAOgC,IAAGO,MAAAzC,YAAA,0JAW3BsD,EAASpD,IAAOgC,IAAG6B,MAAA/D,YAAA,uIAUnBuD,EAAiBrD,IAAO8D,GAAEC,MAAAjE,YAAA,yDAC5BmC,GAKEqB,EAAWtD,IAAOgE,EAACC,MAAAnE,YAAA,mCACrBoC,GAIEqB,GAAcvD,IAAOgE,EAACE,MAAApE,YAAA,6FAQtB0D,GAAOxD,IAAOmE,EAACC,MAAAtE,YAAA,8CAKf4D,GAAkB1D,IAAOgC,IAAGqC,MAAAvE,YAAA,gFAQ5B6D,GAAe3D,YAAOD,EAAPC,CAAcsE,MAAAxE,YAAA,yGAO7B8D,GAAc5D,YAAOD,EAAPC,CAAcuE,MAAAzE,YAAA,QCjFnB0E,GAjBK,SAAA5D,GAAA,SAAA4D,IAAA,OAAA3D,YAAAC,KAAA0D,GAAAzD,YAAAD,KAAAE,YAAAwD,GAAAvD,MAAAH,KAAAI,YAcjB,OAdiBC,YAAAqD,EAAA5D,GAAAQ,YAAAoD,EAAA,EAAAnD,IAAA,SAAAC,MAAA,WACT,IAAAmB,EAC+C3B,KAAKc,MAAMc,WAAzD+B,EAAEhC,EAAFgC,GAAI9B,EAAIF,EAAJE,KAAMd,EAAQY,EAARZ,SAAUe,EAAQH,EAARG,SAAUC,EAAWJ,EAAXI,YAEtC,OACEtB,IAAAC,cAACkD,GAAW,CAACD,GAAIA,GACflD,IAAAC,cAACb,EAAa,CAACkB,SAAUA,IACzBN,IAAAC,cAACmD,GAAc,KACbpD,IAAAC,cAAA,UAAKmB,GACLpB,IAAAC,cAAC8B,GAAQ,KAAC,kCAAOV,EAAS,iBAC1BrB,IAAAC,cAAC+B,GAAW,KAAEV,SAIrB2B,EAdiB,CAASjD,IAAMQ,WAmB7B2C,GAAc1E,IAAO4E,GAAE/E,MAAAC,YAAA,6IAWvB6E,GAAiB3E,IAAOgC,IAAGO,MAAAzC,YAAA,8HAO3BmC,GAIAqB,GAAWtD,IAAO6E,KAAIhB,MAAA/D,YAAA,gDAExBoC,GAGEqB,GAAcvD,IAAO6E,KAAId,MAAAjE,YAAA,gLAU3BoC,YCLW4C,GAhDK,SAAAlE,GAAA,SAAAkE,IAAA,IAAAC,EAAAC,EAAAnE,YAAAC,KAAAgE,GAAA,QAAAG,EAAA/D,UAAAgE,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnE,UAAAmE,GAkBjB,OAlBiBL,EAAAjE,YAAAD,MAAAiE,EAAA/D,YAAA8D,IAAAQ,KAAArE,MAAA8D,EAAA,CAAAjE,MAAAa,OAAAwD,MAClBI,gBAAkB,SAACC,GAAW,IACpBf,EAAOe,EAAEC,OAAOC,QAAQ,MAAxBjB,GACRO,EAAKpD,MAAM+D,UAAUlB,IACtBO,EAEDY,iBAAmB,SAACJ,GAClB,GAAMA,EAAEC,kBAAkBI,kBAA1B,CAAqD,IAEtChE,EAAa2D,EAAEC,OAAtBnE,MACR0D,EAAKpD,MAAMkE,YAAYjE,KACxBmD,EAEDe,oBAAsB,SAACP,GACrB,GAAMA,EAAEC,kBAAkBI,kBAA1B,CAAqD,IAEtCG,EAAgBR,EAAEC,OAAzBnE,MACR0D,EAAKpD,MAAMqE,eAAeD,KAC3BhB,EA2BA,OA7CiB7D,YAAA2D,EAAAlE,GAkBjBQ,YAAA0D,EAAA,EAAAzD,IAAA,SAAAC,MAAA,WAGC,OACEC,IAAAC,cAAA,YACED,IAAAC,cAAC0E,GAAe,KACd3E,IAAAC,cAAA,UAAQmB,KAAK,WAAW8B,GAAG,kBAAkB0B,SAAUrF,KAAK8E,kBACzD,CAAC,gBAAIjE,OAAAyE,aAAKlG,IAAYmG,IAAI,SAAAxE,GAAQ,OACjCN,IAAAC,cAAA,UAAQF,MAAOO,GAAWA,MAG9BN,IAAAC,cAAA,UAAQmB,KAAK,UAAU8B,GAAG,iBAAiB0B,SAAUrF,KAAKiF,qBACvD5F,EAAckG,IAAI,SAAAxE,GAAQ,OACzBN,IAAAC,cAAA,UAAQF,MAAOO,GAAWA,OAKhCN,IAAAC,cAAC8E,GAAuB,KACtB/E,IAAAC,cAAA,MAAIyB,QAASnC,KAAKyE,iBACfzE,KAAKc,MAAM2E,YAAYF,IAAI,SAAA3D,GAAU,OACpCnB,IAAAC,cAACgD,GAAc,CAACnD,IAAKqB,EAAW+B,GAAI/B,WAAYA,aAM3DoC,EA7CiB,CAASvD,IAAMQ,WAkD7BmE,GAAkBlG,IAAOwG,QAAO3G,MAAAC,YAAA,2SAoBhCwG,GAA0BtG,IAAOwG,QAAOjE,MAAAzC,YAAA,yGC4B/B2G,GAhGN,SAAA7F,GACP,SAAA6F,EAAY7E,GAAc,IAAAoD,EAAAnE,YAAAC,KAAA2F,IACxBzB,EAAAjE,YAAAD,KAAAE,YAAAyF,GAAAnB,KAAAxE,KAAMc,KAsBR+D,UAAY,SAAClB,GACXO,EAAK0B,SAAS,CACZC,SAAUlC,EACVmC,aAAa,KAEhB5B,EAED9B,WAAa,WACX8B,EAAK0B,SAAS,CACZE,aAAa,KAEhB5B,EAEDc,YAAc,SAACjE,GACbmD,EAAK0B,SAAS,CACZ7E,cAEHmD,EAEDiB,eAAiB,SAACD,GAChBhB,EAAK0B,SAAS,CACZV,iBAEHhB,EAED6B,kBAAoB,WAAM,IAAAC,EACU9B,EAAK+B,MAA/BlF,EAAQiF,EAARjF,SAAUmE,EAAWc,EAAXd,YAEZO,EAAcvB,EAAK+B,MAAMR,YAAYS,OACzC,SAAAtE,GAAU,MAAiB,iBAAbb,GAAqBa,EAAWb,WAAaA,IAGvDoF,EAAW,SAACvE,GAChB,MAAuB,uBAAhBsD,EAAwBtD,EAAWC,KAAOD,EAAWE,UAG9D,OAAO2D,EAAYW,KAAK,SAAC/C,EAAGgD,GAC1B,IAAMC,EAAIH,EAAS9C,GACbkD,EAAIJ,EAASE,GACnB,OAAIC,EAAIC,EAAU,EACdD,EAAIC,GAAW,EACZ,KA7DJC,aAAaC,QAAQ,gBACxBD,aAAaE,QAAQ,cAAeC,KAAKC,UAAUC,GAASpB,cAG9D,IAAMA,EAAckB,KAAKG,MAAMN,aAAaC,QAAQ,gBAAkB,MAanE,OAZHvC,EAAK+B,MAAQ,CACXR,cACA1E,SAAU,eACVmE,YAAa,qBACbY,aAAa,EACbD,SAAU,KAGZkB,OAAOC,iBAAiB,QAAS,SAAAC,GAAa,IAAV1G,EAAG0G,EAAH1G,IAC9B2D,EAAK+B,MAAMH,aAAuB,WAARvF,GAC5B2D,EAAK9B,eAEN8B,EAwEJ,OA7FM7D,YAAAsF,EAAA7F,GAsBNQ,YAAAqF,EAAA,EAAApF,IAAA,SAAAC,MAAA,WA+CQ,IAAA0G,EAAAlH,KACP,OACES,IAAAC,cAAA,OAAKyG,UAAU,OACb1G,IAAAC,cAACW,EAAM,MAEPZ,IAAAC,cAACsD,GAAc,CACbyB,YAAazF,KAAK+F,oBAClBlB,UAAW7E,KAAK6E,UAChBG,YAAahF,KAAKgF,YAClBG,eAAgBnF,KAAKmF,iBAGtBnF,KAAKiG,MAAMH,aACVrF,IAAAC,cAACgB,EAAgB,CACfU,WAAYpC,KAAKoC,WACjBR,WACEiF,GAASpB,YAAY2B,KACnB,SAAAxF,GAAU,OAAIA,EAAW+B,KAAOuD,EAAKjB,MAAMJ,kBAOxDF,EA7FM,CAASlF,IAAMQ,WCZXoG,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhH,IAAAC,cAACD,IAAMiH,WAAU,KACfjH,IAAAC,cAAC7B,EAAW,MACZ4B,IAAAC,cAACiF,GAAG","file":"static/js/main.61e0a00b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  ul,\n  li {\n    list-style: none;\n  }\n\n  html,\n  body {\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  :root {\n    --primary-color: #ec4a0a;\n    --lighten-color: #f6a88a;\n    --grey-100: #ffffff;\n    --grey-200: #d0d5dd;\n    --grey-300: #667085;\n    --grey-400: #344054;\n    --grey-500: #000000;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  width: 100%;\n  height: 44px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n\n  background: var(--primary-color);\n  color: var(--grey-100);\n`;\n\nexport default Button;\n","import { Category } from '../types/restaurant';\n\nexport const CATEGORIES = ['한식', '중식', '일식', '양식', '아시안', '기타'] as const;\nexport const DISTANCES = [5, 10, 15, 20, 30] as const;\nexport const SORTING_TYPES = ['이름순', '거리순'] as const;\n\nexport const CATEGORY_IMAGE_MAP: Record<Category, string> = {\n  한식: 'category-korean.png',\n  일식: 'category-japanese.png',\n  중식: 'category-chinese.png',\n  양식: 'category-western.png',\n  아시안: 'category-asian.png',\n  기타: 'category-etc.png'\n};\n","import { Category } from '../types/restaurant';\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { CATEGORY_IMAGE_MAP } from '../constants';\n\ninterface Props {\n  category: Category;\n}\n\nclass CategoryImage extends React.Component<Props> {\n  render() {\n    return (\n      <CategoryImageWrapper>\n        <img src={`./img/${CATEGORY_IMAGE_MAP[this.props.category]}`} alt={this.props.category} />\n      </CategoryImageWrapper>\n    );\n  }\n}\n\nconst CategoryImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n\n  img {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport default CategoryImage;\n","export const textTitle = /* css */ `\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 900;\n`;\n\nexport const textSubtitle = /* css */ `\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n`;\n\nexport const textBody = /* css */ `\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n`;\n\nexport const textCaption = /* css */ `\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { textTitle } from '../style/mixin';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <HeaderWrapper>\n        <h1>점심 뭐 먹지</h1>\n        <AddRestaurantButton>\n          <img src=\"./img/add-button.png\" alt=\"add-restaurant-button\" />\n        </AddRestaurantButton>\n      </HeaderWrapper>\n    );\n  }\n}\n\nexport default Header;\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n\n  h1 {\n    ${textTitle}\n    color: #fcfcfd;\n  }\n`;\n\nconst AddRestaurantButton = styled.button`\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n\n  img {\n    display: block;\n    width: 40px;\n    height: 40px;\n    object-fit: contain;\n  }\n`;\n","import { Restaurant } from '../types/restaurant';\n\nimport React from 'react';\nimport { Button, CategoryImage } from './';\nimport styled from 'styled-components';\n\nimport { textBody, textSubtitle } from '../style/mixin';\n\ninterface Props {\n  closeModal: () => void;\n  restaurant: Restaurant;\n}\n\nclass RestaurantDetail extends React.Component<Props> {\n  render() {\n    const { category, name, distance, description, link } = this.props.restaurant;\n\n    return (\n      <>\n        <ModalBackdrop onClick={this.props.closeModal} />\n        <ModalContainer>\n          <Detail>\n            <CategoryImage category={category} />\n            <RestaurantName>{name}</RestaurantName>\n            <Distance>캠퍼스부터 {distance}분 내</Distance>\n            <Description>{description}</Description>\n            <Link href={link}>{link}</Link>\n            <ButtonContainer>\n              <RemoveButton>삭제하기</RemoveButton>\n              <CloseButton onClick={this.props.closeModal}>닫기</CloseButton>\n            </ButtonContainer>\n          </Detail>\n        </ModalContainer>\n      </>\n    );\n  }\n}\n\nexport default RestaurantDetail;\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n`;\n\nconst Detail = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  height: 508px;\n`;\n\nconst RestaurantName = styled.h2`\n  ${textSubtitle}\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nconst Distance = styled.p`\n  ${textBody}\n  color: #ec4a0a;\n`;\n\nconst Description = styled.p`\n  height: 240px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n`;\n\nconst Link = styled.a`\n  height: 24px;\n  color: #000000;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n\n  button + button {\n    margin-left: 16px;\n  }\n`;\n\nconst RemoveButton = styled(Button)`\n  border: 1px solid var(--grey-300);\n\n  background: transparent;\n  color: var(--grey-300);\n`;\n\nconst CloseButton = styled(Button)``;\n","import { Restaurant } from '../types/restaurant';\n\nimport React from 'react';\nimport { CategoryImage } from './';\nimport styled from 'styled-components';\n\nimport { textBody, textSubtitle } from '../style/mixin';\n\ninterface Props {\n  restaurant: Restaurant;\n}\n\nclass RestaurantItem extends React.Component<Props> {\n  render() {\n    const { id, name, category, distance, description } = this.props.restaurant;\n\n    return (\n      <ItemWrapper id={id}>\n        <CategoryImage category={category} />\n        <RestaurantInfo>\n          <h3>{name}</h3>\n          <Distance>캠퍼스부터 {distance}분 내</Distance>\n          <Description>{description}</Description>\n        </RestaurantInfo>\n      </ItemWrapper>\n    );\n  }\n}\n\nexport default RestaurantItem;\n\nconst ItemWrapper = styled.li`\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n\n  cursor: pointer;\n`;\n\nconst RestaurantInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  h3 {\n    margin: 0;\n    ${textSubtitle}\n  }\n`;\n\nconst Distance = styled.span`\n  color: var(--primary-color);\n  ${textBody}\n`;\n\nconst Description = styled.span`\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  ${textBody}\n`;\n","import { Category, Restaurant, SortingType } from '../types/restaurant';\n\nimport React, { ChangeEvent } from 'react';\nimport { RestaurantItem } from './';\nimport styled from 'styled-components';\n\nimport { CATEGORIES, SORTING_TYPES } from '../constants';\n\ninterface Props {\n  restaurants: Restaurant[];\n  openModal: (id: Restaurant['id']) => void;\n  setCategory: (category: Category) => void;\n  setSortingType: (sortingType: SortingType) => void;\n}\n\nclass RestaurantList extends React.Component<Props> {\n  openDetailModal = (e: any) => {\n    const { id } = e.target.closest('li');\n    this.props.openModal(id);\n  };\n\n  onChangeCategory = (e: ChangeEvent) => {\n    if (!(e.target instanceof HTMLSelectElement)) return;\n\n    const { value: category } = e.target;\n    this.props.setCategory(category as Category);\n  };\n\n  onChangeSortingType = (e: ChangeEvent) => {\n    if (!(e.target instanceof HTMLSelectElement)) return;\n\n    const { value: sortingType } = e.target;\n    this.props.setSortingType(sortingType as SortingType);\n  };\n\n  render() {\n    return (\n      <main>\n        <FilterContainer>\n          <select name=\"category\" id=\"category-filter\" onChange={this.onChangeCategory}>\n            {['전체', ...CATEGORIES].map(category => (\n              <option value={category}>{category}</option>\n            ))}\n          </select>\n          <select name=\"sorting\" id=\"sorting-filter\" onChange={this.onChangeSortingType}>\n            {SORTING_TYPES.map(category => (\n              <option value={category}>{category}</option>\n            ))}\n          </select>\n        </FilterContainer>\n\n        <RestaurantListContainer>\n          <ul onClick={this.openDetailModal}>\n            {this.props.restaurants.map(restaurant => (\n              <RestaurantItem key={restaurant.id} restaurant={restaurant}></RestaurantItem>\n            ))}\n          </ul>\n        </RestaurantListContainer>\n      </main>\n    );\n  }\n}\n\nexport default RestaurantList;\n\nconst FilterContainer = styled.section`\n  display: flex;\n  justify-content: space-between;\n\n  margin-top: 24px;\n  padding: 0 16px;\n\n  select {\n    height: 44px;\n    min-width: 125px;\n\n    border: 1px solid #d0d5dd;\n    border-radius: 8px;\n    padding: 8px;\n\n    background: transparent;\n    font-size: 16px;\n  }\n`;\n\nconst RestaurantListContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  margin: 16px 0;\n  padding: 0 16px;\n`;\n","import { Category, Restaurant, SortingType } from './types/restaurant';\n\nimport React from 'react';\nimport { Header, RestaurantList, RestaurantDetail } from './components';\n\nimport mockData from './mockData.json';\n\ninterface Props {}\n\ninterface State {\n  restaurants: Restaurant[];\n  category: string;\n  sortingType: SortingType;\n  isModalOpen: boolean;\n  detailId: Restaurant['id'];\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    if (!localStorage.getItem('restaurants')) {\n      localStorage.setItem('restaurants', JSON.stringify(mockData.restaurants));\n    }\n\n    const restaurants = JSON.parse(localStorage.getItem('restaurants') || '[]');\n    this.state = {\n      restaurants,\n      category: '전체',\n      sortingType: '이름순',\n      isModalOpen: false,\n      detailId: '1'\n    };\n\n    window.addEventListener('keyup', ({ key }) => {\n      if (this.state.isModalOpen && key === 'Escape') {\n        this.closeModal();\n      }\n    });\n  }\n\n  openModal = (id: Restaurant['id']) => {\n    this.setState({\n      detailId: id,\n      isModalOpen: true\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalOpen: false\n    });\n  };\n\n  setCategory = (category: Category) => {\n    this.setState({\n      category\n    });\n  };\n\n  setSortingType = (sortingType: SortingType) => {\n    this.setState({\n      sortingType\n    });\n  };\n\n  filterRestaurants = () => {\n    const { category, sortingType } = this.state;\n\n    const restaurants = this.state.restaurants.filter(\n      restaurant => category === '전체' || restaurant.category === category\n    );\n\n    const getPivot = (restaurant: Restaurant) => {\n      return sortingType === '이름순' ? restaurant.name : restaurant.distance;\n    };\n\n    return restaurants.sort((a, b) => {\n      const A = getPivot(a);\n      const B = getPivot(b);\n      if (A > B) return 1;\n      if (A < B) return -1;\n      return 0;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <RestaurantList\n          restaurants={this.filterRestaurants()}\n          openModal={this.openModal}\n          setCategory={this.setCategory}\n          setSortingType={this.setSortingType}\n        />\n\n        {this.state.isModalOpen && (\n          <RestaurantDetail\n            closeModal={this.closeModal}\n            restaurant={\n              mockData.restaurants.find(\n                restaurant => restaurant.id === this.state.detailId\n              ) as Restaurant\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport GlobalStyle from './style/GlobalStyle';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}