{"version":3,"sources":["style/GlobalStyle.tsx","components/Button.ts","components/CategoryImage/CategoryImage.styles.ts","constants/index.ts","components/CategoryImage/CategoryImage.tsx","components/Filter/Filter.styles.ts","components/Filter/Filter.tsx","style/mixin.ts","components/Header/Header.styles.ts","components/Header/Header.tsx","components/RestaurantDetail/RestaurantDetail.styles.ts","components/RestaurantDetail/RestaurantDetail.tsx","components/RestaurantItem/RestaurantItem.styles.ts","components/RestaurantItem/RestaurantItem.tsx","components/RestaurantList/RestaurantList.styles.ts","components/RestaurantList/RestaurantList.tsx","App.tsx","hooks/useLocalStorage.ts","hooks/useFilter.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","Button","styled","button","CategoryImageWrapper","div","CATEGORIES","SORTING_TYPES","CATEGORY_IMAGE_MAP","한식","일식","중식","양식","아시안","기타","CategoryImage","props","React","createElement","src","concat","category","alt","FilterContainer","section","Filter","name","id","onChange","_ref","target","value","setCategory","_toConsumableArray","map","index","key","_ref2","sortingType","setSortingType","textSubtitle","textBody","Header","header","Title","h1","_templateObject2","AddRestaurantButton","_templateObject3","ModalBackdrop","ModalContainer","Detail","RestaurantName","h2","_templateObject4","Distance","p","_templateObject5","Description","_templateObject6","Link","a","_templateObject7","ButtonContainer","_templateObject8","RemoveButton","_templateObject9","CloseButton","_templateObject10","RestaurantDetail","closeModal","restaurant","modalContainerRef","useRef","useEffect","current","focus","document","body","classList","add","remove","Fragment","onClick","ref","onKeyUp","e","code","tabIndex","distance","description","link","href","ItemWrapper","li","RestaurantInfo","h3","span","RestaurantItem","RestaurantListContainer","RestaurantList","closest","openModal","restaurants","App","localRestaurantsData","localStorage","getItem","setItem","JSON","stringify","mockData","parse","_useState","useState","isModalOpen","_useState2","_slicedToArray","modalState","setModalState","_useRestaurantFilter","initialData","filterOptions","setFilterOptions","sortKey","filter","sort","b","getFilteredRestaurants","_objectSpread","useRestaurantFilter","_useRestaurantFilter2","_useRestaurantFilter3","className","detailId","find","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.63225c9d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  ul,\n  li {\n    list-style: none;\n  }\n\n  html,\n  body {\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  :root {\n    --primary-color: #ec4a0a;\n    --lighten-color: #f6a88a;\n    --grey-100: #ffffff;\n    --grey-200: #d0d5dd;\n    --grey-300: #667085;\n    --grey-400: #344054;\n    --grey-500: #000000;\n  }\n\n  .overflow-hidden {\n    overflow: hidden;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 44px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n\n  background: var(--primary-color);\n  color: var(--grey-100);\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const CategoryImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n\n  img {\n    width: 36px;\n    height: 36px;\n  }\n`;\n","import { Category } from '../types/restaurant';\n\nexport const CATEGORIES = ['한식', '중식', '일식', '양식', '아시안', '기타'] as const;\nexport const DISTANCES = [5, 10, 15, 20, 30] as const;\nexport const SORTING_TYPES = ['이름순', '거리순'] as const;\n\nexport const CATEGORY_IMAGE_MAP: Record<Category, string> = {\n  한식: 'category-korean.png',\n  일식: 'category-japanese.png',\n  중식: 'category-chinese.png',\n  양식: 'category-western.png',\n  아시안: 'category-asian.png',\n  기타: 'category-etc.png'\n};\n","import { Category } from '../../types/restaurant';\n\nimport React from 'react';\nimport * as styled from './CategoryImage.styles';\n\nimport { CATEGORY_IMAGE_MAP } from '../../constants';\n\ninterface Props {\n  category: Category;\n}\n\nconst CategoryImage = (props: Props) => {\n  return (\n    <styled.CategoryImageWrapper>\n      <img src={`./img/${CATEGORY_IMAGE_MAP[props.category]}`} alt={props.category} />\n    </styled.CategoryImageWrapper>\n  );\n};\n\nexport default CategoryImage;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.section`\n  display: flex;\n  justify-content: space-between;\n\n  margin-top: 24px;\n  padding: 0 16px;\n\n  select {\n    height: 44px;\n    min-width: 125px;\n\n    border: 1px solid #d0d5dd;\n    border-radius: 8px;\n    padding: 8px;\n\n    background: transparent;\n    font-size: 16px;\n  }\n`;\n","import { Category, SortingType } from '../../types/restaurant';\n\nimport React, { ChangeEvent } from 'react';\nimport * as styled from './Filter.styles';\n\nimport { CATEGORIES, SORTING_TYPES } from '../../constants';\n\ninterface Props {\n  setCategory: (category: Category | '전체') => void;\n  setSortingType: (sortingType: SortingType) => void;\n}\n\nconst Filter = (props: Props) => {\n  const onChangeCategory = ({ target: { value: category } }: ChangeEvent<HTMLSelectElement>) => {\n    props.setCategory(category as Category);\n  };\n\n  const onChangeSortingType = ({\n    target: { value: sortingType },\n  }: ChangeEvent<HTMLSelectElement>) => {\n    props.setSortingType(sortingType as SortingType);\n  };\n\n  return (\n    <styled.FilterContainer>\n      <select name=\"category\" id=\"category-filter\" onChange={onChangeCategory}>\n        {['전체', ...CATEGORIES].map((category, index) => (\n          <option key={index} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n      <select name=\"sorting\" id=\"sorting-filter\" onChange={onChangeSortingType}>\n        {SORTING_TYPES.map((category, index) => (\n          <option key={index} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n    </styled.FilterContainer>\n  );\n};\n\nexport default Filter;\n","export const textTitle = /* css */ `\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 900;\n`;\n\nexport const textSubtitle = /* css */ `\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n`;\n\nexport const textBody = /* css */ `\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n`;\n\nexport const textCaption = /* css */ `\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n`;\n","import styled from 'styled-components';\n\nimport { textTitle } from '../../style/mixin';\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n`;\n\nexport const Title = styled.h1`\n  ${textTitle}\n  color: #fcfcfd;\n`;\n\nexport const AddRestaurantButton = styled.button`\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n\n  img {\n    display: block;\n    width: 40px;\n    height: 40px;\n    object-fit: contain;\n  }\n`;\n","import React from 'react';\nimport * as styled from './Header.styles';\n\nconst Header = () => {\n  return (\n    <styled.Header>\n      <styled.Title>점심 뭐 먹지</styled.Title>\n      <styled.AddRestaurantButton>\n        <img src=\"./img/add-button.png\" alt=\"add-restaurant-button\" />\n      </styled.AddRestaurantButton>\n    </styled.Header>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport { textBody, textSubtitle } from '../../style/mixin';\n\nimport Button from '../Button';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n`;\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport const Detail = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  height: 508px;\n`;\n\nexport const RestaurantName = styled.h2`\n  ${textSubtitle}\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nexport const Distance = styled.p`\n  ${textBody}\n  color: #ec4a0a;\n`;\n\nexport const Description = styled.p`\n  height: 240px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n`;\n\nexport const Link = styled.a`\n  height: 24px;\n  color: #000000;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n\n  button + button {\n    margin-left: 16px;\n  }\n`;\n\nexport const RemoveButton = styled(Button)`\n  border: 1px solid var(--grey-300);\n\n  background: transparent;\n  color: var(--grey-300);\n`;\n\nexport const CloseButton = styled(Button)``;\n","import { Restaurant } from '../../types/restaurant';\n\nimport React, { KeyboardEvent, useEffect, useRef } from 'react';\nimport { CategoryImage } from '..';\nimport * as styled from './RestaurantDetail.styles';\n\ninterface Props {\n  closeModal: () => void;\n  restaurant: Restaurant;\n}\n\nconst RestaurantDetail = ({ closeModal, restaurant }: Props) => {\n  const modalContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (modalContainerRef) {\n      modalContainerRef.current.focus();\n    }\n    document.body.classList.add('overflow-hidden');\n\n    return () => document.body.classList.remove('overflow-hidden');\n  }, []);\n\n  const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\n    if (e.code !== 'Escape') return;\n\n    closeModal();\n  };\n\n  return (\n    <>\n      <styled.ModalBackdrop onClick={closeModal} />\n      <styled.ModalContainer ref={modalContainerRef} onKeyUp={onKeyUp} tabIndex={0}>\n        <styled.Detail>\n          <CategoryImage category={restaurant.category} />\n          <styled.RestaurantName>{restaurant.name}</styled.RestaurantName>\n          <styled.Distance>캠퍼스부터 {restaurant.distance}분 내</styled.Distance>\n          <styled.Description>{restaurant.description}</styled.Description>\n          {restaurant.link && <styled.Link href={restaurant.link}>{restaurant.link}</styled.Link>}\n          <styled.ButtonContainer>\n            <styled.RemoveButton>삭제하기</styled.RemoveButton>\n            <styled.CloseButton onClick={closeModal}>닫기</styled.CloseButton>\n          </styled.ButtonContainer>\n        </styled.Detail>\n      </styled.ModalContainer>\n    </>\n  );\n};\n\nexport default RestaurantDetail;\n","import styled from 'styled-components';\nimport { textBody, textSubtitle } from '../../style/mixin';\n\nexport const ItemWrapper = styled.li`\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n\n  cursor: pointer;\n`;\n\nexport const RestaurantInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const RestaurantName = styled.h3`\n  margin: 0;\n  ${textSubtitle}\n`;\n\nexport const Distance = styled.span`\n  color: var(--primary-color);\n  ${textBody}\n`;\n\nexport const Description = styled.span`\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  ${textBody}\n`;\n","import { Restaurant } from '../../types/restaurant';\n\nimport React from 'react';\nimport { CategoryImage } from '..';\nimport * as styled from './RestaurantItem.styles';\n\ninterface Props {\n  restaurant: Restaurant;\n}\n\nconst RestaurantItem = ({ restaurant }: Props) => {\n  return (\n    <styled.ItemWrapper id={restaurant.id}>\n      <CategoryImage category={restaurant.category} />\n      <styled.RestaurantInfo>\n        <styled.RestaurantName>{restaurant.name}</styled.RestaurantName>\n        <styled.Distance>캠퍼스부터 {restaurant.distance}분 내</styled.Distance>\n        <styled.Description>{restaurant.description}</styled.Description>\n      </styled.RestaurantInfo>\n    </styled.ItemWrapper>\n  );\n};\n\nexport default RestaurantItem;\n","import styled from 'styled-components';\n\nexport const RestaurantListContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  margin: 16px 0;\n  padding: 0 16px;\n`;\n","import { Restaurant } from '../../types/restaurant';\n\nimport React from 'react';\nimport * as styled from './RestaurantList.styles';\nimport { RestaurantItem } from '..';\n\ninterface Props {\n  restaurants: Restaurant[];\n  openModal: (id: Restaurant['id']) => void;\n}\n\nconst RestaurantList = (props: Props) => {\n  const onClickRestaurantList = ({ target }: React.MouseEvent) => {\n    const { id } = (target as HTMLUListElement).closest('li');\n    props.openModal(id);\n  };\n\n  return (\n    <styled.RestaurantListContainer>\n      <ul onClick={onClickRestaurantList}>\n        {props.restaurants.map((restaurant) => (\n          <RestaurantItem key={restaurant.id} restaurant={restaurant} />\n        ))}\n      </ul>\n    </styled.RestaurantListContainer>\n  );\n};\n\nexport default RestaurantList;\n","import { Restaurant } from './types/restaurant';\n\nimport React, { useState } from 'react';\nimport { Header, RestaurantList, RestaurantDetail, Filter } from './components';\n\nimport { useRestaurantFilter } from './hooks/useFilter';\nimport { useLocalStorage } from './hooks/useLocalStorage';\n\ninterface ModalState {\n  isModalOpen: boolean;\n  detailId?: Restaurant['id'];\n}\n\nconst App = () => {\n  const localRestaurantsData = useLocalStorage('restaurants');\n  const [modalState, setModalState] = useState<ModalState>({\n    isModalOpen: false,\n  });\n  const [restaurants, { setCategory, setSortingType }] = useRestaurantFilter(localRestaurantsData);\n\n  const openModal = (id: Restaurant['id']) => {\n    setModalState({\n      ...modalState,\n      detailId: id,\n      isModalOpen: true,\n    });\n  };\n\n  const closeModal = () => {\n    setModalState({\n      ...modalState,\n      isModalOpen: false,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <main>\n        <Filter setCategory={setCategory} setSortingType={setSortingType} />\n        <RestaurantList restaurants={restaurants} openModal={openModal} />\n      </main>\n\n      {modalState.isModalOpen && (\n        <RestaurantDetail\n          closeModal={closeModal}\n          restaurant={\n            restaurants.find((restaurant) => restaurant.id === modalState.detailId) as Restaurant\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { useEffect } from 'react';\n\nimport mockData from '../mockData.json';\n\nexport const useLocalStorage = (key: string) => {\n  useEffect(() => {\n    if (!localStorage.getItem(key)) {\n      localStorage.setItem(key, JSON.stringify(mockData.restaurants));\n    }\n  }, []);\n\n  return JSON.parse(localStorage.getItem(key) || '[]');\n};\n","import { useState } from 'react';\nimport { Category, Restaurant, SortingType } from '../types/restaurant';\n\ninterface FilterState {\n  category: Category | '전체';\n  sortingType: SortingType;\n}\n\ninterface SetFunction {\n  setCategory: (category: FilterState['category']) => void;\n  setSortingType: (sortingType: SortingType) => void;\n}\n\nexport const useRestaurantFilter = (initialData: Restaurant[]): [Restaurant[], SetFunction] => {\n  const [filterOptions, setFilterOptions] = useState<FilterState>({\n    category: '전체',\n    sortingType: '이름순',\n  });\n\n  const setCategory: SetFunction['setCategory'] = (category) => {\n    setFilterOptions({\n      ...filterOptions,\n      category,\n    });\n  };\n\n  const setSortingType: SetFunction['setSortingType'] = (sortingType) => {\n    setFilterOptions({\n      ...filterOptions,\n      sortingType,\n    });\n  };\n\n  const getFilteredRestaurants = () => {\n    const sortKey = filterOptions.sortingType === '이름순' ? 'name' : 'distance';\n\n    const restaurants = initialData.filter(\n      (restaurant: Restaurant) =>\n        filterOptions.category === '전체' || restaurant.category === filterOptions.category\n    );\n\n    return restaurants.sort((a: Restaurant, b: Restaurant) => (a[sortKey] > b[sortKey] ? 1 : -1));\n  };\n\n  return [getFilteredRestaurants(), { setCategory, setSortingType }];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport GlobalStyle from './style/GlobalStyle';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}